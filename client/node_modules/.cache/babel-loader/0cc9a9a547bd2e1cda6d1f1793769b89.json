{"ast":null,"code":"var _jsxFileName = \"/home/burak/Python_exercises/Kartaca-Internship-Application/client/src/pages/CalenderPage.tsx\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst events = [{\n  title: \"Big Meeting\",\n  allDay: true,\n  start: new Date(2022, 2, 1),\n  end: new Date(2022, 2, 2)\n}, {\n  title: \"Vacation\",\n  start: new Date(2022, 2, 2),\n  end: new Date(2022, 2, 3)\n}, {\n  title: \"Conference\",\n  start: new Date(2022, 2, 20),\n  end: new Date(2022, 2, 20)\n}];\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\nconst CalenderPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500,\n        margin: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CalenderPage;\nexport default CalenderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalenderPage\");","map":{"version":3,"sources":["/home/burak/Python_exercises/Kartaca-Internship-Application/client/src/pages/CalenderPage.tsx"],"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","events","title","allDay","start","Date","end","locales","require","localizer","CalenderPage","height","margin"],"mappings":";AAAA,SAAQA,QAAR,EAAiBC,gBAAjB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAyB,sBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,mDAAP;AACA,OAAOC,KAAP,MAA8B,OAA9B;;AAIC,MAAMC,MAAM,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,MAAM,EAAE,IAFZ;AAGIC,EAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAHX;AAIIC,EAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;AAJT,CADY,EAOZ;AACIH,EAAAA,KAAK,EAAE,UADX;AAEIE,EAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFX;AAGIC,EAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;AAHT,CAPY,EAYZ;AACIH,EAAAA,KAAK,EAAE,YADX;AAEIE,EAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAFX;AAGIC,EAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHT,CAZY,CAAf;AAmBC,MAAME,OAAO,GAAG;AACd,WAASC,OAAO,CAAC,uBAAD;AADF,CAAhB;AAIA,MAAMC,SAAS,GAAGd,gBAAgB,CAAC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,WAHiC;AAIjCC,EAAAA,MAJiC;AAKjCQ,EAAAA;AALiC,CAAD,CAAlC;;AASF,MAAMG,YAAY,GAAG,MAAM;AAGzB,sBACE;AAAA,2BACA,QAAC,QAAD;AACA,MAAA,SAAS,EAAED,SADX;AAEA,MAAA,MAAM,EAAER,MAFR;AAGA,MAAA,aAAa,EAAC,OAHd;AAIA,MAAA,WAAW,EAAC,KAJZ;AAKA,MAAA,KAAK,EAAI;AAACU,QAAAA,MAAM,EAAC,GAAR;AAAYC,QAAAA,MAAM,EAAC;AAAnB;AALT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;KAAMF,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import {Calendar,dateFnsLocalizer} from \"react-big-calendar\";\nimport format from \"date-fns/format\"\nimport parse from \"date-fns/parse\"\nimport startOfWeek  from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\"\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\nimport React, {useState} from \"react\";\nimport DatePicker from \"react-datepicker\";\n\n\n const events = [\n    {\n        title: \"Big Meeting\",\n        allDay: true,\n        start: new Date(2022, 2, 1),\n        end: new Date(2022, 2, 2),\n    },\n    {\n        title: \"Vacation\",\n        start: new Date(2022, 2, 2),\n        end: new Date(2022, 2, 3),\n    },\n    {\n        title: \"Conference\",\n        start: new Date(2022, 2, 20),\n        end: new Date(2022, 2, 20),\n    },\n];\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n\nconst CalenderPage = () => {\n\n\n  return (\n    <div>\n    <Calendar \n    localizer={localizer}\n    events={events}\n    startAccessor=\"start\"\n    endAccessor=\"end\" \n    style = {{height:500,margin:\"50px\"}}\n    />\n   </div>\n  )\n}\n\nexport default CalenderPage"]},"metadata":{},"sourceType":"module"}