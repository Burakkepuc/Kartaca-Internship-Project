{"ast":null,"code":"var _jsxFileName = \"/home/burak/Python_exercises/Kartaca-Internship-Application/client/src/pages/CalenderPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst events = [{\n  title: \"Big Meeting\",\n  allDay: true,\n  start: new Date(2022, 2, 1),\n  end: new Date(2022, 2, 2)\n}, {\n  title: \"Vacation\",\n  start: new Date(2022, 2, 2),\n  end: new Date(2022, 2, 3)\n}, {\n  title: \"Conference\",\n  start: new Date(2022, 2, 20),\n  end: new Date(2022, 2, 20)\n}];\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\nconst CalenderPage = () => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    end: \"\"\n  });\n  const [allEvents, setAllEvents] = useState(events);\n\n  function handleAddEvent() {\n    setAllEvents([...allEvents, setNewEvent]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: allEvents,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500,\n        margin: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalenderPage, \"NReJrdzV5WALWcc3te82Ct4xxzY=\");\n\n_c = CalenderPage;\nexport default CalenderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalenderPage\");","map":{"version":3,"sources":["/home/burak/Python_exercises/Kartaca-Internship-Application/client/src/pages/CalenderPage.tsx"],"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","events","title","allDay","start","Date","end","locales","require","localizer","CalenderPage","newEvent","setNewEvent","allEvents","setAllEvents","handleAddEvent","height","margin"],"mappings":";;;AAAA,SAAQA,QAAR,EAAiBC,gBAAjB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAyB,sBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,mDAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAIC,MAAMC,MAAM,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,MAAM,EAAE,IAFZ;AAGIC,EAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAHX;AAIIC,EAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;AAJT,CADY,EAOZ;AACIH,EAAAA,KAAK,EAAE,UADX;AAEIE,EAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFX;AAGIC,EAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;AAHT,CAPY,EAYZ;AACIH,EAAAA,KAAK,EAAE,YADX;AAEIE,EAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAFX;AAGIC,EAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHT,CAZY,CAAf;AAmBC,MAAME,OAAO,GAAG;AACd,WAASC,OAAO,CAAC,uBAAD;AADF,CAAhB;AAIA,MAAMC,SAAS,GAAGf,gBAAgB,CAAC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,WAHiC;AAIjCC,EAAAA,MAJiC;AAKjCS,EAAAA;AALiC,CAAD,CAAlC;;AASF,MAAMG,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAuB;AAACE,IAAAA,KAAK,EAAC,EAAP;AAAUE,IAAAA,KAAK,EAAC,EAAhB;AAAmBE,IAAAA,GAAG,EAAC;AAAvB,GAAvB,CAAvC;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAA2Bd,QAAQ,CAASC,MAAT,CAAzC;;AAEA,WAASc,cAAT,GAAyB;AACvBD,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAcD,WAAd,CAAD,CAAZ;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGA,QAAC,QAAD;AACA,MAAA,SAAS,EAAEH,SADX;AAEA,MAAA,MAAM,EAAEI,SAFR;AAGA,MAAA,aAAa,EAAC,OAHd;AAIA,MAAA,WAAW,EAAC,KAJZ;AAKA,MAAA,KAAK,EAAI;AAACG,QAAAA,MAAM,EAAC,GAAR;AAAYC,QAAAA,MAAM,EAAC;AAAnB;AALT;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBD;;GAAMP,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import {Calendar,dateFnsLocalizer} from \"react-big-calendar\";\nimport format from \"date-fns/format\"\nimport parse from \"date-fns/parse\"\nimport startOfWeek  from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\"\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\nimport React, {useState} from \"react\";\nimport DatePicker from \"react-datepicker\";\n\n\n const events = [\n    {\n        title: \"Big Meeting\",\n        allDay: true,\n        start: new Date(2022, 2, 1),\n        end: new Date(2022, 2, 2),\n    },\n    {\n        title: \"Vacation\",\n        start: new Date(2022, 2, 2),\n        end: new Date(2022, 2, 3),\n    },\n    {\n        title: \"Conference\",\n        start: new Date(2022, 2, 20),\n        end: new Date(2022, 2, 20),\n    },\n];\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n\nconst CalenderPage = () => {\n  const [newEvent,setNewEvent] = useState<string|string|string>({title:\"\",start:\"\",end:\"\"})\n  const [allEvents,setAllEvents] = useState<string>(events)\n\n  function handleAddEvent(){\n    setAllEvents([...allEvents,setNewEvent])\n  }\n\n  return (\n    <div>\n      <h1>Calendar</h1>\n      <h2>Add New Event</h2>\n    <Calendar \n    localizer={localizer}\n    events={allEvents}\n    startAccessor=\"start\"\n    endAccessor=\"end\" \n    style = {{height:500,margin:\"50px\"}}\n    />\n   </div>\n  )\n}\n\nexport default CalenderPage"]},"metadata":{},"sourceType":"module"}